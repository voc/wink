- content_for :title, "Checklist #{@check_list.case.name} - (#{@check_list.event.name}) - "

%h2
  Checklist 
  %a{href: case_path(@check_list.case), target: '_blank'}= @check_list.case.name
  at
  %a{href: event_path(@check_list.event), target: '_blank'}= @check_list.event.name


.filters
  %label{for: 'item_filter'}= 'Item filter:'
  .value
    %img.spinner{:src => asset_path('spinner.gif'), :alt => 'Loading...'}
    %input#item_filter{:type => 'text'}
    %img#item_filter_clear{:src => asset_path('icons/cross.png'), :alt => 'Clear'}

= render partial: 'record_errors', locals: { record: @check_list }

= form_for(@check_list.check_list_items, as: :check_list_items, url: check_list_path(@check_list), method: 'PUT') do |f|
  = render partial: 'form_check_item', locals: {f: f}, object: @check_list_item
  %div.floating_form_actions
    = f.submit "Save"
    = f.submit "Return", name: 'return'
    = link_to 'Cancel', check_list_path(@check_list)


:javascript
  var item_filter_timer;
  var item_filter_value = '';

  $(function() {
    // Hide all items which do not match the given regular expression
    // If all items are hidden in a shelf unit, the whole unit becomes hidden
    var item_filter_action = function() {

      var pattern = new RegExp($('#item_filter').val(), 'i');

      $('.noborder').each(function() {
        var shown_count = 0;

        $(this).find('.checklist_item').each(function() {
          // debugger;
          if ($(this).find('label').text().match(pattern)) {
            $(this).show();
            shown_count += 1;
          } else {
            $(this).hide();
          }
        });

        if (shown_count == 0) {
          $(this).hide();
        } else {
          $(this).show();
        }
      });

      item_filter_value = $('#item_filter').val();

      if ($('#item_filter').val() != '') {
        $('#item_filter_clear').css('visibility', 'visible');
        //$('h3').css('display', 'none');
      } else {
        $('#item_filter_clear').css('visibility', 'hidden');
        //$('h3').css('display', 'block');
      }

      $('.spinner').css('visibility', 'hidden');
    };


    // Button shit

    // Amount of milliseconds for the finish-typing-timeout
    var item_filter_timeout = 500;

    // When a key is released, a timeout for filtering is activated
    $('#item_filter').keyup(function() {
      if (item_filter_value != $('#item_filter').val()) {
        item_filter_timer = setTimeout(item_filter_action, item_filter_timeout);
        $('.spinner').css('visibility', 'visible');
      }
    });

    // When a key is pressed, a running timeout for filtering gets stopped
    $('#item_filter').keydown(function() {
      clearTimeout(item_filter_timer);
      $('.spinner').css('visibility', 'hidden');
    });

    $('#item_filter_clear').click(function() {
      $(this).css('visibility', 'hidden');
      $('#item_filter').val('');
      item_filter_action();
    });
  });


  // Select all items in headline group, when clicking on the headline.
  $(document).ready(function() {
    $('h3').click(function() {
      inputs = $(this).parent().find('input[type="checkbox"]');
      
      if (inputs[0].checked) {
        var checked = false;
      } else {
        var checked = true;
      }

      $(inputs).prop('checked', checked);
    });
  });
