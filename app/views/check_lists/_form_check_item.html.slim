- p @grouped_items
- @grouped_items.sort_by { |location,items| "#{location}" }.each do |location,items|
  p.export_cases
    .noborder
      - if location.empty?
        a name=Digest::MD5.hexdigest("nolocation")
        h3 id=Digest::MD5.hexdigest("nolocation") no location
      - else
        p.export_cases
          a name="#{Digest::MD5.hexdigest(location)}"
          h3 id=Digest::MD5.hexdigest(location) "#{location} (#{items.count})"
      div.checklist_group
        -# TODO: Be able to mark broken items with comments.
        - items.sort_by { |cli| "#{cli.item.item&.name}#{cli.item.name}.#{format('%05.1f', cli.item.model.to_f)}" }.each do |cli|
          -# indent checkbox when it is related to another item e.g. power bricks
          -# if cli.item.item
            td
          div.checklist_item
            = check_box_tag("checked_check_list_items_#{cli.id}", cli.id, cli.checked, { name: "check_list[checked_check_list_items][]"})
            label for="checked_check_list_items_#{cli.id}"
              = cli.item.name_with_model
              - if cli.item.missing? or cli.item.broken?
                br
                span.mark.missing = "missing" if cli.item.missing?
                span.mark.broken = "broken" if cli.item.broken?
.noborder
  table
    tbody
      tr
        td
          = check_box(:check_list, :checked, checked_value: true, unchecked_value: false)
        td
          label for="check_list_checked" Finished checking?
